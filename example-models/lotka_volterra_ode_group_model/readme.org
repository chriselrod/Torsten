* Build
** Edit/Add =cmdstan/make/local=
#+BEGIN_SRC sh
  TORSTEN_MPI = 1                                         # flag on torsten's MPI solvers
  -include $(MATH)make/setup_torsten.mk
  CXXFLAGS += $(CXXFLAGS_MPI) -isystem /usr/local/include # path to MPI library's headers
  LDFLAGS += $(LDFLAGS_MPI)
  CC=mpicxx                                               # name of mpi compilers
  CXX=mpicxx
#+END_SRC
** Build in =cmdstan=
#+BEGIN_SRC sh
  make ../example-models/lotka_volterra_ode_group_model/lv_group
#+END_SRC
   
* Run
#+BEGIN_SRC sh
mpiexec -n 2 lv_group sample data file=lv_group.data.R
#+END_SRC

* Results
Three binaries are built and used to run: 
- sequential run using Stan's =rk45= integrator.
- sequential run using Torsten's =rk45= integrator.
- MPI run using Torsten's =rk45= group integrator(with 2,
  4, 8 processes, respectively).

The wall time of sequential runs and MPI runs(in seconds)
with ODE group size 4
#+caption: Wall time(s)
| run                | wall time(s) |
|--------------------+--------------|
| Sequential stan    |         2600 |
| sequential pmx     |         2679 |
| MPI pmx (n_proc=2) |         1200 |
| MPI pmx (n_proc=4) |          696 |
| MPI pmx (n_proc=8) |          467 |

